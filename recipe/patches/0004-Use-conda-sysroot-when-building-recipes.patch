From bf365ae007b2e745053896c15a2a2d82689eec7e Mon Sep 17 00:00:00 2001
From: Jarrett Johnson <jarrett.johnson@schrodinger.com>
Date: Sun, 15 Jun 2025 12:46:13 -0400
Subject: [PATCH] patch

---
 pyqtbuild/bindings.py | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/pyqtbuild/bindings.py b/pyqtbuild/bindings.py
index 1a0d729..2e9f10e 100644
--- a/pyqtbuild/bindings.py
+++ b/pyqtbuild/bindings.py
@@ -43,6 +43,18 @@ class PyQtBindings(Bindings):
             if headers or sources:
                 self.include_dirs.append(qpy_dir)
 
+        prefix_dir = os.environ.get('PREFIX', None)
+        if prefix_dir is not None and sys.platform == 'linux':
+           self.extra_compile_args.extend([f"-I{prefix_dir}/include -L{prefix_dir}/lib -Wl,-rpath,{prefix_dir}/lib -Wl,-rpath-link,{prefix_dir}/lib -Wl,-L{prefix_dir}/lib"])
+           self.library_dirs.extend([f"{prefix_dir}/lib"])
+           self.extra_link_args.extend([f"-L{prefix_dir}/lib -Wl,-rpath,{prefix_dir}/lib -Wl,-rpath-link,{prefix_dir}/lib -Wl,-L{prefix_dir}/lib"])
+
+        sysroot = os.environ.get('CONDA_BUILD_SYSROOT', None)
+        if sysroot is not None and sys.platform == 'linux':
+            sysroot = os.path.join(sysroot, 'usr', 'lib64')
+            self.extra_compile_args.extend([f"-L{sysroot} -Wl,-rpath,{sysroot}"])
+            self.extra_link_args.extend([f"-L{sysroot} -Wl,-rpath,{sysroot}"])
+
     def apply_user_defaults(self, tool):
         """ Set default values for user options that haven't been set yet. """
 
@@ -128,6 +140,12 @@ class PyQtBindings(Bindings):
         buildable.libraries.extend(self.libraries)
         buildable.library_dirs.extend(self.library_dirs)
 
+        prefix_dir = os.environ.get('PREFIX', None)
+        if prefix_dir is not None and sys.platform == 'linux':
+            buildable.extra_compile_args.extend([f"-I{prefix_dir}/include -L{prefix_dir}/lib -Wl,-rpath,{prefix_dir}/lib -Wl,-rpath-link,{prefix_dir}/lib -Wl,-L{prefix_dir}/lib"])
+            buildable.library_dirs.extend([f"{prefix_dir}/lib"])
+            buildable.extra_link_args.extend([f"-L{prefix_dir}/lib -Wl,-rpath,{prefix_dir}/lib -Wl,-rpath-link,{prefix_dir}/lib -Wl,-L{prefix_dir}/lib"])
+
         if test_source_path is None:
             # Save the internal test to a file.
             includes = ['#include <{}>'.format(h) for h in self.test_headers]
